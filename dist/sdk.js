var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{Y:()=>a});var n=function(e,t,n,a){return new(n||(n=Promise))((function(o,i){function s(e){try{c(a.next(e))}catch(e){i(e)}}function r(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}c((a=a.apply(e,t||[])).next())}))};class a{constructor(e,t){this.apiBaseUrl=e,this.apiKey=t}static production(e){return new a("https://api.beansapp.com/v4",e)}static staging(e){return new a("https://api.staging.beansapp.com/v4",e)}static custom(e,t){const n=e.endsWith("/")?e.slice(0,e.length-1):e;return new a(n,t)}fetchStellarCurrencies(e){return n(this,void 0,void 0,(function*(){const t=`${this.apiBaseUrl}/companies/me/accounts/${e}/stellar-currencies`,n=yield fetch(t,{headers:{"X-Beans-Company-Api-Key":this.apiKey}});return yield n.json()}))}generateDeeplink(e,t,a,o,i=null,s=null){return n(this,void 0,void 0,(function*(){return yield this.generatePaymentRequest(e,{stellarCurrencyId:t,amount:a,memo:o,maxAllowedPayments:i,paymentReceivedWebHookUrl:s,deeplink:{include:!0}})}))}generatePngQrCode(e,t,a,o,i=null,s=null,r=null){return n(this,void 0,void 0,(function*(){return yield this.generatePaymentRequest(e,{stellarCurrencyId:t,amount:a,memo:o,maxAllowedPayments:i,paymentReceivedWebHookUrl:s,deeplink:{include:!0},pngQrCodeBase64String:{include:!0,preferredSize:r}})}))}generateSvgQrCode(e,t,a,o,i=null,s=null,r=null){return n(this,void 0,void 0,(function*(){return yield this.generatePaymentRequest(e,{stellarCurrencyId:t,amount:a,memo:o,maxAllowedPayments:i,paymentReceivedWebHookUrl:s,deeplink:{include:!0},svgQrCode:{include:!0,size:r}})}))}generatePaymentRequest(e,t){return n(this,void 0,void 0,(function*(){const n=`${this.apiBaseUrl}/companies/me/accounts/${e}/payment-request`,a=yield fetch(n,{method:"POST",headers:{"Content-Type":"application/json","X-Beans-Company-Api-Key":this.apiKey},body:JSON.stringify(t)});return yield a.json()}))}getPaymentRequestStatus(e){return n(this,void 0,void 0,(function*(){const t=`${this.apiBaseUrl}/companies/me/payment-requests/${e}/status`,n=yield fetch(t,{method:"GET",headers:{"Content-Type":"application/json","X-Beans-Company-Api-Key":this.apiKey}});return yield n.json()}))}createCompanyAccount(e,t){return n(this,void 0,void 0,(function*(){const n=`${this.apiBaseUrl}/companies/me/account`,a=yield fetch(n,{method:"POST",headers:{"Content-Type":"application/json","X-Beans-Company-Api-Key":this.apiKey},body:JSON.stringify({stellarAccountId:e,name:t})});if(!a.ok)throw new Error(`Failed to create company account: ${a.status} ${a.statusText}`);return yield a.json()}))}uploadCompanyAccountAvatar(e,t,a){return n(this,void 0,void 0,(function*(){const n=`${this.apiBaseUrl}/companies/${e}/accounts/${t}/avatar`,o=new FormData,i=a instanceof ArrayBuffer?new Blob([a]):a;o.append("image",i);const s=yield fetch(n,{method:"PUT",headers:{"X-Beans-Company-Api-Key":this.apiKey},body:o});if(!s.ok)throw new Error(`Failed to upload company account avatar: ${s.status} ${s.statusText}`);return yield s.json()}))}getCompanyAccountAvatar(e,t,a){return n(this,void 0,void 0,(function*(){const n=`${this.apiBaseUrl}/companies/${e}/accounts/${t}/avatar/${a}`,o=yield fetch(n,{method:"GET",headers:{"X-Beans-Company-Api-Key":this.apiKey}});if(!o.ok)throw new Error(`Failed to get company account avatar: ${o.status} ${o.statusText}`);return yield o.arrayBuffer()}))}deleteCompanyAccount(e){return n(this,void 0,void 0,(function*(){const t=`${this.apiBaseUrl}/companies/me/Accounts/${e}`,n=yield fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json","X-Beans-Company-Api-Key":this.apiKey}});if(!n.ok)throw new Error(`Failed to delete company account: ${n.status} ${n.statusText}`);return yield n.json()}))}getMerchantAccounts(){return n(this,void 0,void 0,(function*(){const e=`${this.apiBaseUrl}/companies/me/accounts`,t=yield fetch(e,{headers:{"X-Beans-Company-Api-Key":this.apiKey}});if(!t.ok)throw new Error(`Failed to fetch merchant accounts: ${t.status} ${t.statusText}`);return(yield t.json()).accounts}))}getMerchantAccount(e){return n(this,void 0,void 0,(function*(){const t=`${this.apiBaseUrl}/companies/me/accounts/${e}`,n=yield fetch(t,{headers:{"X-Beans-Company-Api-Key":this.apiKey}});if(!n.ok)throw new Error(`Failed to fetch merchant account: ${n.status} ${n.statusText}`);return yield n.json()}))}}const o=t.Y;export{o as BeansMerchantSdk};